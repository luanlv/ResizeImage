/*
 * A partial implementation of the Ruby list functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/lists.rb
 */
/*
 * A partial implementation of the Ruby constants functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/constants.rb
 */
/*
 * A partial implementation of the Ruby display functions from Compass:
 * https://github.com/Compass/compass/blob/stable/core/lib/compass/core/sass_extensions/functions/display.rb
 */
/***

   colors.css v2.0.0
   http://clrs.cc
   @mrmrs
   MIT License

***/
/*

   SKINS
   - Backgrounds
   - Colors
   - Border colors
   - SVG fills
   - SVG Strokes

*/
/* Backgrounds */
.bg-navy {
  background-color: #001F3F; }

.bg-blue {
  background-color: #0074D9; }

.bg-aqua {
  background-color: #7FDBFF; }

.bg-teal {
  background-color: #39CCCC; }

.bg-olive {
  background-color: #3D9970; }

.bg-green {
  background-color: #2ECC40; }

.bg-lime {
  background-color: #01FF70; }

.bg-yellow {
  background-color: #FFDC00; }

.bg-orange {
  background-color: #FF851B; }

.bg-red {
  background-color: #FF4136; }

.bg-fuchsia {
  background-color: #F012BE; }

.bg-purple {
  background-color: #B10DC9; }

.bg-maroon {
  background-color: #85144B; }

.bg-white {
  background-color: #fff; }

.bg-gray {
  background-color: #aaa; }

.bg-silver {
  background-color: #ddd; }

.bg-black {
  background-color: #111; }

/* Colors */
.navy {
  color: #001F3F; }

.blue {
  color: #0074D9; }

.aqua {
  color: #7FDBFF; }

.teal {
  color: #39CCCC; }

.olive {
  color: #3D9970; }

.green {
  color: #2ECC40; }

.lime {
  color: #01FF70; }

.yellow {
  color: #FFDC00; }

.orange {
  color: #FF851B; }

.red {
  color: #FF4136; }

.fuchsia {
  color: #F012BE; }

.purple {
  color: #B10DC9; }

.maroon {
  color: #85144B; }

.white {
  color: #fff; }

.silver {
  color: #ddd; }

.gray {
  color: #aaa; }

.black {
  color: #111; }

/* Border colors 

   Use with another border utility that sets border-width and style 
   i.e .border { border-width: 1px; border-style: solid; }     
*/
.border--navy {
  border-color: #001F3F; }

.border--blue {
  border-color: #0074D9; }

.border--aqua {
  border-color: #7FDBFF; }

.border--teal {
  border-color: #39CCCC; }

.border--olive {
  border-color: #3D9970; }

.border--green {
  border-color: #2ECC40; }

.border--lime {
  border-color: #01FF70; }

.border--yellow {
  border-color: #FFDC00; }

.border--orange {
  border-color: #FF851B; }

.border--red {
  border-color: #FF4136; }

.border--fuchsia {
  border-color: #F012BE; }

.border--purple {
  border-color: #B10DC9; }

.border--maroon {
  border-color: #85144B; }

.border--white {
  border-color: #fff; }

.border--gray {
  border-color: #aaa; }

.border--silver {
  border-color: #ddd; }

.border--black {
  border-color: #111; }

/* Fills for SVG */
.fill-navy {
  fill: #001F3F; }

.fill-blue {
  fill: #0074D9; }

.fill-aqua {
  fill: #7FDBFF; }

.fill-teal {
  fill: #39CCCC; }

.fill-olive {
  fill: #3D9970; }

.fill-green {
  fill: #2ECC40; }

.fill-lime {
  fill: #01FF70; }

.fill-yellow {
  fill: #FFDC00; }

.fill-orange {
  fill: #FF851B; }

.fill-red {
  fill: #FF4136; }

.fill-fuchsia {
  fill: #F012BE; }

.fill-purple {
  fill: #B10DC9; }

.fill-maroon {
  fill: #85144B; }

.fill-white {
  fill: #fff; }

.fill-gray {
  fill: #aaa; }

.fill-silver {
  fill: #ddd; }

.fill-black {
  fill: #111; }

/* Strokes for SVG */
.stroke-navy {
  stroke: #001F3F; }

.stroke-blue {
  stroke: #0074D9; }

.stroke-aqua {
  stroke: #7FDBFF; }

.stroke-teal {
  stroke: #39CCCC; }

.stroke-olive {
  stroke: #3D9970; }

.stroke-green {
  stroke: #2ECC40; }

.stroke-lime {
  stroke: #01FF70; }

.stroke-yellow {
  stroke: #FFDC00; }

.stroke-orange {
  stroke: #FF851B; }

.stroke-red {
  stroke: #FF4136; }

.stroke-fuchsia {
  stroke: #F012BE; }

.stroke-purple {
  stroke: #B10DC9; }

.stroke-maroon {
  stroke: #85144B; }

.stroke-white {
  stroke: #fff; }

.stroke-gray {
  stroke: #aaa; }

.stroke-silver {
  stroke: #ddd; }

.stroke-black {
  stroke: #111; }

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

a {
  background-color: transparent; }

a:active, a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: .67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code, kbd, pre, samp {
  font-family: monospace,monospace;
  font-size: 1em; }

button, input, optgroup, select, textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], html input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid silver;
  margin: 0 2px;
  padding: .35em .625em .75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

body {
  background-color: #ddd;
  padding: 0 auto;
  font-family: arial;
  font-size: 11px; }

html, body {
  padding: 0; }

.f-r {
  float: right; }

.f-l {
  float: left; }

.ra-3 {
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  -ms-border-radius: 3px;
  -o-border-radius: 3px;
  border-radius: 3px; }

.ra-5 {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  -ms-border-radius: 5px;
  -o-border-radius: 5px;
  border-radius: 5px; }

.ra-5 {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  -o-border-radius: 10px;
  border-radius: 10px; }

.sa {
  -webkit-box-shadow: 2px 2px 3px 0px rgba(128, 128, 128, 0.5);
  -moz-box-shadow: 2px 2px 3px 0px rgba(128, 128, 128, 0.5);
  box-shadow: 2px 2px 3px 0px rgba(128, 128, 128, 0.5); }

.bo {
  border: 1px solid rgba(128, 128, 128, 0.5); }

.container {
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
  background: white; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

.header {
  height: 100px;
  background: #7FDBFF;
  margin-bottom: 5px; }

.nav {
  height: 30px;
  background: #0074D9;
  margin-bottom: 5px; }

.footer {
  height: 50px;
  background: #FF851B;
  margin-top: 10px; }

.main {
  overflow: hidden;
  *zoom: 1; }

.aside {
  min-height: 500px;
  background: #3D9970;
  width: 18.91892%;
  float: left;
  margin-right: 1.35135%; }

.content {
  min-height: 500px;
  overflow: hidden;
  *zoom: 1;
  width: 79.72973%;
  float: right;
  margin-right: 0; }

.thongbao-left {
  width: 59.18367%;
  float: left;
  margin-right: 2.04082%; }

.thongbao-right {
  background: #7FDBFF;
  min-height: 100px;
  width: 36.53846%;
  float: left;
  margin-right: 1.92308%; }

.menuCol1, .menuCol2, .menuCol3 {
  clear: both;
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  min-height: 20px;
  background: #daebfa;
  border: solid 1px #BEDAEC;
  border-bottom: 0;
  padding-top: 5px;
  padding-left: 5px; }

.col1, .col2, .col3 {
  border: solid 1px #BEDAEC;
  border-top: 0;
  clear: both;
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  min-height: 150px;
  margin-bottom: 19px; }

.gallery {
  overflow: hidden;
  *zoom: 1;
  padding-left: 1.26582%;
  padding-right: 1.26582%;
  padding-bottom: 1.26582%; }

.gallery > li {
  width: 24.36975%;
  float: left;
  padding-bottom: 5px;
  margin-bottom: 0.84034%;
  background: rgba(128, 128, 128, 0.08);
  overflow: hidden;
  *zoom: 1;
  color: gray;
  text-align: center; }
  .gallery > li:nth-child(4n+1) {
    margin-left: 0;
    margin-right: -100%;
    clear: both;
    margin-left: 0; }
  .gallery > li:nth-child(4n+2) {
    margin-left: 25.21008%;
    margin-right: -100%;
    clear: none; }
  .gallery > li:nth-child(4n+3) {
    margin-left: 50.42017%;
    margin-right: -100%;
    clear: none; }
  .gallery > li:nth-child(4n+4) {
    margin-left: 75.63025%;
    margin-right: -100%;
    clear: none; }
  .gallery > li .codeP, .gallery > li .nameP, .gallery > li .priceP {
    clear: both;
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0;
    padding: 0; }
  .gallery > li .img {
    max-width: 120px;
    margin-left: auto;
    margin-right: auto;
    margin-top: 10px;
    margin-bottom: 5px; }
    .gallery > li .img:after {
      content: " ";
      display: block;
      clear: both; }
  .gallery > li p {
    font-size: 11px; }
  .gallery > li .codeP {
    height: 14px; }
    .gallery > li .codeP a {
      color: #088ACA; }
  .gallery > li .nameP {
    height: 28px; }
  .gallery > li .price {
    height: 14px;
    display: inline;
    font-size: 12px;
    color: #f00; }
  .gallery > li .stock {
    display: inline;
    color: #000; }

.pContainer {
  margin-top: 10px;
  border: solid 1px #BEDAEC;
  overflow: hidden;
  *zoom: 1;
  font-size: 12px; }

.pHeader {
  clear: both;
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  background: #daebfa;
  height: 21px;
  padding-top: 5px; }
  .pHeader div {
    float: left;
    font-weight: bold;
    margin-left: 3px;
    color: #666;
    font-size: 12px; }

.pImg {
  margin-top: 10px;
  text-align: center;
  width: 33.67347%;
  float: left;
  margin-right: 2.04082%; }
  .pImg em {
    margin: 10px; }
  .pImg .img {
    margin-top: 10px;
    max-width: 200px;
    margin-left: auto;
    margin-right: auto; }
    .pImg .img:after {
      content: " ";
      display: block;
      clear: both; }

.pDetail {
  font-size: 12px;
  margin-top: 10px;
  width: 64.28571%;
  float: right;
  margin-right: 0; }
  .pDetail fieldset {
    overflow: hidden;
    *zoom: 1;
    padding: 4px;
    border: 1px #bedaec solid;
    background: #F7F3F3; }
  .pDetail legend > div {
    width: 100%;
    display: table-cell;
    height: 25px;
    line-height: 25px;
    background-color: #F3EDC7;
    padding-left: 5px;
    padding-right: 5px;
    border-left: 1px #bedaec solid;
    border-right: 1px #bedaec solid;
    color: red;
    font-size: 14px;
    font-weight: bold; }
  .pDetail .pdName {
    color: red;
    font-size: 12px;
    font-weight: bold; }

.pExtra {
  clear: both;
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden;
  *zoom: 1;
  padding: 0; }
  .pExtra ol {
    overflow: hidden;
    *zoom: 1;
    margin-bottom: 0; }
    .pExtra ol li {
      float: left;
      margin: 0px 1px 0px 0px;
      list-style: none; }
      .pExtra ol li div {
        background: #0074D9;
        color: white;
        font-weight: bold;
        -webkit-border-radius: 10px 10px 0 0;
        -moz-border-radius: 10px 10px 0 0;
        -ms-border-radius: 10px 10px 0 0;
        -o-border-radius: 10px 10px 0 0;
        border-radius: 10px 10px 0 0; }
        .pExtra ol li div span {
          margin: 15px; }
  .pExtra .pcExtra {
    border-top: solid 1px #BEDAEC;
    border-bottom: solid 1px #BEDAEC; }

a {
  text-decoration: none; }


/*# sourceMappingURL=data:application/json;base64, */